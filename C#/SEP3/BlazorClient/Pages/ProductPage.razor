@page "/ProductPage/{id:long}"
@using global::Shared.DTOs
@using BlazorClient.Services.ClientInterfaces
@using global::Shared
@inject IProductService productService
@inject IOrderItemService orderItemService

@if (currentProduct == null)
{
           <label>Loading Post data..</label>
}else
{
<div class="container">
    <div class="card">
        <div class="card-body">
            <h3 class="card-title">@currentProduct.name </h3>
            <h6 class="card-subtitle">Here we'll have categoy or smth</h6>
            <div class="row">
                <div class="col-lg-5 col-md-5 col-sm-6">
                    <div class="white-box text-center"><img alt="here's a picture" src="https://i.pinimg.com/564x/a3/6b/42/a36b422bb2bebcbd77bba846b83ddf5d.jpg" class="img-responsive"></div>
                </div>
                <div class="col-lg-7 col-md-7 col-sm-6">
                    <h4 class="box-title mt-5">Product Description</h4>
                    <p>@currentProduct.description</p>
                    <h2 class="mt-5">
                        @currentProduct.price
                    </h2>
                    <button class="btn btn-dark btn-rounded mr-1" data-toggle="tooltip" title="" data-original-title="Add to cart"
                            @onclick="AddToCart">
                    Add to cart</button>
                    <h3 class="box-title mt-5">Sustainability Percentage: (or ingredients idk)</h3>
                    <ul class="list-unstyled">
                        <li><i class="fa fa-check text-success"></i>thingy 1</li>
                        <li><i class="fa fa-check text-success"></i>thingy 2 etc</li>
                    </ul>
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <h3 class="box-title mt-5">General Info (if we wanna go into details)</h3>
                    <div class="table-responsive">
                        <table class="table table-striped table-product">
                            <tbody>
                                
                                <tr>
                                    <td>Delivery Condition</td>
                                    <td>Knock Down</td>
                                </tr>
                                <tr>
                                    <td>Seat Lock Included</td>
                                    <td>Yes</td>
                                </tr>
                                <tr>
                                    <td>Type</td>
                                    <td>Office Chair</td>
                                </tr>
                            
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}
@code {
    [Parameter]
    public long id { get; set; }
    
    
    private string msg = "";
    private ProductCreationDto currentProduct;
    
    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            currentProduct= await productService.GetByIdAsync(id);
           
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async void AddToCart()
    {
        try
        {
            OrderItemCreationDto dto = new OrderItemCreationDto(currentProduct.id, 1);
            await orderItemService.OrderProduct(dto);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }
    
}